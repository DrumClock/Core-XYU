[homing_override]
axes: xyz
gcode:
       SET_DUAL_CARRIAGE CARRIAGE=1
       SET_KINEMATIC_POSITION X={printer.configfile.settings['dual_carriage u'].position_endstop }
       {% if 'dual_carriage v' in printer.configfile.settings %}
         SET_KINEMATIC_POSITION Y={printer.configfile.settings['dual_carriage v'].position_endstop }
       {% endif %}
       
       SET_DUAL_CARRIAGE CARRIAGE=0
       SET_KINEMATIC_POSITION X={printer.configfile.settings['carriage x'].position_endstop } 
       SET_KINEMATIC_POSITION Y={printer.configfile.settings['carriage y'].position_endstop }
       
       SET_KINEMATIC_POSITION Z={printer.configfile.settings['carriage z'].position_endstop }
       
       RESPOND MSG=" and use macro ENABLE_STEPPER "
       RESPOND MSG=" G28 - set manual carriage X,Y,U,V to endstop-position ! "   


[gcode_macro ENABLE_STEPPER]
gcode: 
     SET_STEPPER_ENABLE STEPPER='stepper x' ENABLE=1
     SET_STEPPER_ENABLE STEPPER='stepper y' ENABLE=1
     SET_STEPPER_ENABLE STEPPER='stepper u' ENABLE=1
     SET_STEPPER_ENABLE STEPPER='stepper v' ENABLE=1
     
####################################################################      

[gcode_macro T0]

gcode: 
      # SET_DUAL_CARRIAGE AXIS=X CARRIAGE=0
      SET_DUAL_CARRIAGE CARRIAGE=0
      RESPOND MSG=" SET CARRIAGE - T0 " 
      

###------------------------------------------------------------------

[gcode_macro T1]
gcode: 
      # SET_DUAL_CARRIAGE  AXIS=X CARRIAGE=1
      SET_DUAL_CARRIAGE  CARRIAGE=1
      RESPOND MSG=" SET CARRIAGE - T1 " 


###------------------------------------------------------------------

[gcode_macro COPY]
gcode:

    SET_DUAL_CARRIAGE CARRIAGE=1   
    G1 X{(printer.configfile.settings['dual_carriage u'].position_endstop/2)|string} F30000  
    SET_DUAL_CARRIAGE CARRIAGE=0    
    G1 X{printer.configfile.settings['carriage x'].position_endstop|string} F30000
    ### activate mode
    SET_DUAL_CARRIAGE CARRIAGE=1  MODE=COPY
    RESPOND MSG=" COPY mode for dual carriage  " 

###------------------------------------------------------------------

[gcode_macro MIRROR]
gcode:

    SET_DUAL_CARRIAGE CARRIAGE=1   
    G1 X{printer.configfile.settings['dual_carriage u'].position_endstop|string} F30000    
    SET_DUAL_CARRIAGE CARRIAGE=0    
    G1 X{printer.configfile.settings['carriage x'].position_endstop|string} F30000
    ### activate mode
    SET_DUAL_CARRIAGE CARRIAGE=1  MODE=MIRROR
    RESPOND MSG=" MIRROR mode for dual carriage  " 
    
###------------------------------------------------------------------    

[gcode_macro PRIMARY]
gcode:

    SET_DUAL_CARRIAGE CARRIAGE=1   
    G1 X{printer.configfile.settings['dual_carriage u'].position_endstop|string} F30000  
    G1 Y{printer.configfile.settings['dual_carriage v'].position_endstop|string} F30000  
    
    SET_DUAL_CARRIAGE CARRIAGE=0    
    G1 X{printer.configfile.settings['carriage x'].position_endstop|string} F30000
    G1 Y{printer.configfile.settings['carriage y'].position_endstop|string} F30000
    
    ### activate mode PRIMARY
    RESPOND MSG=" PRIMARY mode for dual carriage  " 

    

####################################################################

[gcode_macro DUMP_C]
description: Debug: Print all entries of the printer config object.
gcode:
 
 {% set parameters = namespace(output = '') %}
 {% set donotwant1 = ['gcode_macro','gcode','display_data','display_glyph','display_template','menu'] %}
 {% set donotwant2 = ['aliases','points','calibrate','gcode'] %}
  
  {% if params.VAR  is defined %}   
     {% set var = params.VAR|lower %}
    
#------------- 1 --------------      
      {% if var =='all' %}
         {% for name1 in printer.configfile.config|sort %}
            {% for name2 in printer.configfile.config[name1] %}
              {% set param = "printer.configfile.config['%s'].%s = %s" % (name1, name2, printer.configfile.config[name1][name2]) %}
              {% set parameters.output = parameters.output +  param + "\n" %}
           {% endfor %}           
       {% endfor %}
       
#------------- 2 --------------         
      {% else %}
       {% set ns = namespace(detect=false,name1='') %}           
       
       {% for name1 in printer.configfile.config|sort %}
         {% if name1|lower is in var %} 
           {% set ns.detect =true %}
           {% set ns.name = name1 %}
         {% endif %} 
       {% endfor %}        
         
        {% if ns.detect %}          
           {% for name2 in printer.configfile.config[ns.name] %}
              {% set param = "printer.configfile.config['%s'].%s = %s" % (ns.name, name2, printer.configfile.config[ns.name][name2]) %}
              {% set parameters.output = parameters.output +  param + "\n" %}
           {% endfor %}
         {% else %}  
            {action_respond_info("WARNING: params VAR=%s not in printer" % (var))}
         {% endif %}  
       {% endif %}
     
      
#------------- 3 --------------        
   {% else %}    
     {% for name1 in printer.configfile.config|sort %}
     {% set ns = namespace(detect=true) %}     
       {% for test in donotwant1|sort %}
         {% if test in name1 %}{% set ns.detect =false %}{% endif %}    
       {% endfor %} 
       
      {% if ns.detect %}          
           {% for name2 in printer.configfile.config[name1] %}
              {% if name2 is not in donotwant2 %}
                {% set param = "printer.configfile.config['%s'].%s = %s" % (name1, name2, printer.configfile.config[name1][name2]) %}
                {% set parameters.output = parameters.output +  param + "\n" %}
              {% endif %}    
            {% endfor %}
         {% endif %}
        {% endfor %}
    {% endif %}
  
  {action_respond_info(parameters.output)}

#-------------------------------------------------------------------------------------------------

[gcode_macro DUMP_S]
description: Debug: Print all entries of the printer settings object.
gcode:
 
 {% set parameters = namespace(output = '') %}
 {% set donotwant1 = ['gcode_macro','gcode','display_data','display_glyph','display_template','menu'] %}
 {% set donotwant2 = ['aliases','points','calibrate','gcode'] %}
  
  {% if params.VAR  is defined %}
     {% set var = params.VAR|lower %}
       {% for name1 in printer.configfile.settings|sort %}
         {% if  var in name1 %}
           {% for name2 in printer.configfile.settings[name1] %}
              {% set param = "printer.configfile.settings['%s'].%s = %s" % (name1, name2, printer.configfile.settings[name1][name2]) %}
              {% set parameters.output = parameters.output +  param + "\n" %}
           {% endfor %}
         {% endif %}    
       {% endfor %}
        
   {% else %}    
     {% for name1 in printer.configfile.settings|sort %}
     {% set ns = namespace(detect=true) %}     
       {% for test in donotwant1|sort %}
         {% if test in name1 %}{% set ns.detect =false %}{% endif %}    
       {% endfor %} 
       
      {% if ns.detect %}   
           {% for name2 in printer.configfile.settings[name1] %}
              {% if name2 is not in donotwant2 %}
                {% set param = "printer.configfile.settings['%s'].%s = %s" % (name1, name2, printer.configfile.settings[name1][name2]) %}
                {% set parameters.output = parameters.output +  param + "\n" %}
              {% endif %}    
            {% endfor %}
         {% endif %}
        {% endfor %}
    {% endif %}
  
  {action_respond_info(parameters.output)}

#-------------------------------------------------------------------------------------------------

[gcode_macro DUMP_PRINTER]
description: Debug: Print entries of the printer object without gcode_macro
gcode:
  {% set out = [] %}
  
  {% if params.SHOW !='all' %} 
    {% set reject = ['configfile','gcode_macro','bed_mesh','gcode','mcu','save_variables'] %}
  {% else %} 
    {% set reject = ['configfile','gcode_macro','gcode','save_variables'] %}
  {% endif %} 

    
  {% for object in printer|sort %}
  {% set ns = namespace(detect=true) %} 
   
     {% for test in reject|sort %}
       {% if test in object %}{% set ns.detect =false %}{% endif %}    
     {% endfor %}   
       
  {% if ns.detect %}
    {% for parameter, value in printer[object].items()|sort %}
     {% set _dummy = out.append("printer['%s'].%s = %s" % (object, parameter, value)) %}
    {% endfor %} 
  {% endif %}    
   
  {% endfor %}
  
  #{% set out = [] %}
  #{% for object in printer|sort %}
  #  {% if object != 'configfile' and 'gcode_macro' is not in object %}
  #    {% for parameter, value in printer[object].items()|sort %}
  #      {% set _dummy = out.append("printer['%s'].%s = %s" % (object, parameter, value)) %}
  #    {% endfor %}      
  #  {% endif %}
  #{% endfor %}
  
  {% if out|length == 0 %}{% set _dummy = out.append("Nothing found for \"DUMP_PRINTER_PARAM %s\"" % rawparams) %}{% endif %}
  {action_respond_info(out|join("\n"))}